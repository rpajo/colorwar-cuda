MATEMATIČNO MODELIRANJE
Projektna naloga:
Vojna barv

Problem, s katerim smo se ukvarjali v naši skupini,
je bila vojna barv. Natančneje, spreminjanje barv na vsaki točki slike,
glede na njene sosede. Če je določena točka poljubne barve,
ima pa dva soseda modre in po enega zelene in rdeče barve,
se bo točka v naslednjem koraku z 50% verjetnostjo obarvala modro,
z 25% pa zeleno oz. rdeče. ((morda dodajanje slik?!)).
Naša naloga je torej bila, sestaviti algoritem in ga pretvoriti v program,
ki bo prebral poljubno sliko, in na njej omenjeno prebarvanje izvajal toliko časa,
dokler ne bo ena barva prevladala (zasedenost vseh točk slike bo samo ene barve).

Kot že piše v navodilih, naša naloga ni bila matematično zahtevna, saj je
matrika z našimi slikovnimi točkami predstavljena kot markovska veriga z nˆ2 polji,
b barv in bˆ(nˆ2) stanji. Glede na začetno stanje barv, zmaga v večini primerov
barva, ki je zasedala največje število slikovnih pik, v začetnem stanju.

Potrebno je bilo izbrati ustrezen programski jezik, v katerem smo se primerno
lotili našega problema, zato smo izbrali programski jezik C.
V našem primeru je šlo za paralelizacijo na grafičnem procesorju
s programom Cuda.

Za začetek smo se odločili, da bomo v programu uporabljali format slike .bmp,
kateremu dokaj preprosto spreminjamo zapis barv po treh komponentah, RGB (rdeča,
zelena in modra). Ker pa sam C ne podpira branja slik, smo si pomagali
s knjižnico QDBMP avtorja Chai Braudo. V enem obhodu smo se zapeljali čez
vse slikovne pike, preverili njihove sosede in glede na njihovo
pogostost, nato s funkcijo random() spremenili njeno barvo (kot že omenjeno,
po treh komponentah, RGB). Obhode smo nato ponavljali toliko časa,
dokler ni prevladala ena barva oz. smo podali po koliko obhodih naj se zaključi
(pred izvajanjem se poljubno izbere).
